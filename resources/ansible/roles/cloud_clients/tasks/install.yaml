---


- name: Install argocd client
  package:
    name: argocd
    state: present
#  ansible.builtin.get_url:
#    url: https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
#    dest: /usr/local/bin/argocd
#    mode: '0755'
#  become: true



#- name: Download Helm install script
#  get_url:
#    url: https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
#    dest: /tmp/get_helm.sh
#    mode: '0755'

#- name: Run Helm install script
#  command: /tmp/get_helm.sh
#  args:
#    creates: /usr/local/bin/helm

- name: Install Helm
  package:
    name: helm
    state: present

- name: install helm plugin unittest
  become: false
  ansible.builtin.command:
    cmd: helm plugin install https://github.com/helm-unittest/helm-unittest.git
    chdir: "{{ ansible_env.HOME }}"
  environment:
    USER: "{{ default_username }}"


#- name: Install k9s
#  ansible.builtin.get_url:
#    url: https://github.com/derailed/k9s/releases/latest/download/k9s_Linux_amd64.tar.gz
#    dest: /tmp/k9s_Linux_amd64.tar.gz
#  become: true

#- name: Extract k9s binary
#  ansible.builtin.unarchive:
#    src: /tmp/k9s_Linux_amd64.tar.gz
#    dest: /usr/local/bin/
#    remote_src: yes
#    creates: /usr/local/bin/k9s
#  become: true

#- name: Ensure k9s binary is executable
#  ansible.builtin.file:
#    path: /usr/local/bin/k9s
#    mode: '0755'
#  become: true

- name: Install k9s
  package:
    name: k9s
    state: present



#- name: Get latest kubectl stable version
#  uri:
#    url: https://dl.k8s.io/release/stable.txt
#    return_content: yes
#  register: kubectl_version

#- name: Download binary
#  get_url:
#    url: "https://dl.k8s.io/release/{{ kubectl_version.content }}/bin/linux/amd64/kubectl"
#    dest: /usr/local/bin/kubectl
#    mode: '0755'

- name: Install kubectl
  package:
    name: kubectl
    state: present



- name: Install OpenShift CLI (oc)
  ansible.builtin.get_url:
    url: https://mirror.openshift.com/pub/openshift-v4/clients/ocp/latest/openshift-client-linux.tar.gz
    dest: /tmp/openshift-client-linux.tar.gz
  become: true

- name: Extract oc binary
  ansible.builtin.unarchive:
    src: /tmp/openshift-client-linux.tar.gz
    dest: /usr/local/bin/
    remote_src: yes
    creates: /usr/local/bin/oc
  become: true

- name: Ensure oc binary is executable
  ansible.builtin.file:
    path: /usr/local/bin/oc
    mode: '0755'
  become: true


- name: Install stern
  package:
    name: stern
    state: present

