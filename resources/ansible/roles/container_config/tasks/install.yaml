---

- name: Install required packages (archives)
  package:
    name: "{{install_packages.archive | flatten }}"
    state: present
  become: true

- name: Install required packages (devel)
  package:
    name: "{{install_packages.devel | flatten }}"
    state: present
  become: true

- name: Install required packages (python)
  package:
    name: "{{install_packages.python | flatten }}"
    state: present
  become: true

- name: Install required packages (system)
  package:
    name: "{{install_packages.system | flatten }}"
    state: present
  become: true

- name: Install required packages (utils)
  package:
    name: "{{install_packages.utils | flatten }}"
    state: present
  become: true

- name: Install required packages (web)
  package:
    name: "{{install_packages.web | flatten }}"
    state: present
  become: true


- name: Download and install latest pipx Debian package
  block:
    - name: Download pipx Debian package
      ansible.builtin.get_url:
        url: "http://ftp.fr.debian.org/debian/pool/main/p/python-pipx/pipx_1.7.1-1_all.deb"
        dest: "{{ volund_temp_folder }}/pipx_1.7.1-1_all.deb"
        mode: '0644'

    - name: Install pipx Debian package
      ansible.builtin.apt:
        deb: "{{ volund_temp_folder }}/pipx_1.7.1-1_all.deb"
        state: present
  when: ansible_os_family == 'Debian'
  become: true

- name: install pipx tools
  community.general.pipx:
    name: "{{ item_pipx }}"
    state: present
  loop: "{{ install_pipx_tools }}"
  loop_control:
    loop_var: item_pipx
  become: true
  become_user: "{{ default_username }}"


# --- Archlinux AUR packages ---------------------------------

- name: Configure AUR packages building (Archlinux)
  block:
    - name: cleaning
      ansible.builtin.file:
        path: "{{ volund_temp_folder }}/paru-bin/"
        state: absent
      become: true

    - name: Clone paru PKGBUILD
      git:
        repo: https://aur.archlinux.org/paru-bin.git
        dest: "{{ volund_temp_folder }}/paru-bin"
        update: true

    - name: changing owner
      ansible.builtin.file:
        path: "{{ volund_temp_folder }}/paru-bin/"
        state: directory
        owner: nobody
        group: nobody
        mode: 'u=rwx,g=rwx,o=rwx'
        recurse: true
      become: true

    - name: ensure PKGBUILD is in Unix format
      ansible.builtin.command:
        chdir: "{{ volund_temp_folder }}/paru-bin/"
        cmd: "runuser -u nobody -- dos2unix PKGBUILD"
      become: true

    - name: Build 'paru'
      command:
        chdir: "{{ volund_temp_folder }}/paru-bin/"
        cmd: "runuser -u nobody -- makepkg --syncdeps --noconfirm"
      become: true

    - name: changing owner
      ansible.builtin.file:
        path: "{{ volund_temp_folder }}/paru-bin/"
        state: directory
        owner: "{{ default_username }}"
        recurse: true
      become: true

    - name: search for files with .pkg.tar.zst extension except for *debug* files
      find:
        paths: "{{ volund_temp_folder }}/paru-bin/"
        patterns: "*.pkg.tar.zst"
        recurse: true
        file_type: file
        excludes:
          - "*debug*"
      register: found_packages

    - name: debug found packages
      ansible.builtin.debug:
        msg: "Found packages: {{ found_packages.files }}"

    - name: installing 'paru'
      command:
        chdir: "{{ volund_temp_folder }}/paru-bin/"
        cmd: "pacman -U {{ item.path }} --noconfirm --needed"
      become: true
      when: found_packages.matched > 0
      with_items: "{{ found_packages.files }}"

    - name: cleaning
      ansible.builtin.file:
        path: "{{ volund_temp_folder }}/paru-bin/"
        state: absent
      become: true
  when: ansible_os_family == 'Archlinux' # and false # Experimental


# install git flow manually on Archlinux as it is not in the official repos
- name: Install git-flow (Archlinux)
  block:
    - name: Cloner le PKGBUILD de gitflow-cjs avec paru
      command: paru -G gitflow-cjs
      args:
        chdir: "{{ volund_temp_folder }}"
      register: clone_result

    - name: Convertir PKGBUILD CRLF en LF
      ansible.builtin.shell: sed -i 's/\r$//' PKGBUILD
      args:
        chdir: "{{ volund_temp_folder }}/gitflow-cjs"

    - name: Installer gitflow-cjs sans confirmation
          # paru -Sy --noconfirm .
      command: makepkg -si --noconfirm
      args:
        chdir: "{{ volund_temp_folder }}/gitflow-cjs"
      become: true
      become_user: "{{ default_username }}"

  when: ansible_os_family == 'Archlinux'

