---


# ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ #> /etc/timezone


- name: Get timezone from ipapi.co if TZ is undefined or empty
  ansible.builtin.uri:
    url: https://ipapi.co/timezone
    return_content: yes
  register: timezone_response
  when: TZ is undefined or TZ == None or TZ | length == 0

- name: Set timezone fact
  ansible.builtin.set_fact:
    timezone: "{{ (TZ is defined and TZ != None and TZ | length > 0) | ternary(TZ, timezone_response.content | trim) }}"

- name: Set timezone fact
  ansible.builtin.set_fact:
    timezone: "{{ timezone_response.content | trim }}"

- name: Set system timezone
  ansible.builtin.file:
    src: "/usr/share/zoneinfo/{{ timezone }}"
    dest: /etc/localtime
    state: link
    force: yes

- name: Write timezone to /etc/timezone
  ansible.builtin.copy:
    content: "{{ timezone }}\n"
    dest: /etc/timezone
    owner: root
    group: root
    mode: '0644'







- name: Create default user
  user:
    name: "{{ default_username }}"
    uid: "{{ default_user_UID }}"
    shell: "{{ default_user_shell }}"
    groups: sudo
    append: yes
    state: present
  when: ansible_os_family in ['debian', 'redhat']

- name: Create default user
  user:
    name: "{{ default_username }}"
    uid: "{{ default_user_UID }}"
    shell: "{{ default_user_shell }}"
    groups: wheel
    append: yes
    state: present
  when: ansible_os_family in ['Archlinux']

- name: Set sudo to NOPASSWD for this user
  lineinfile:
    path: /etc/sudoers
    line: "{{ default_username }} ALL=(ALL) NOPASSWD: ALL"
    validate: 'visudo -cf %s'
  when: ansible_os_family in ['debian', 'redhat']

- name: Set sudo to NOPASSWD for this user (wheel group)
  lineinfile:
    path: /etc/sudoers
    line: "%wheel ALL=(ALL) NOPASSWD: ALL"
    validate: 'visudo -cf %s'
#  ansible.builtin.template:
#    src: sudoers.volund.conf.j2
#    dest: "/etc/sudoers.d/90-{{ default_username }}.conf"
#    owner: root
#    group: root
#    mode: '0444'
  when: ansible_os_family in ['Archlinux']







- name: Check presence of certificates files
  stat:
    path: "{{ build_resource_path }}/certs/"
  register: certs_dir

- name: Deploy custom CA certificates directory
  block:
    - name: Copy certs if sourcePath is defined
      copy:
        src: "{{ build_resource_path }}/certs/"
        dest: "{{ ca_trust_path }}"
        owner: root
        group: root
        mode: '0644'
        remote_src: yes

    - name: Update CA trust store
      command: update-ca-trust
      when:
        - ansible_os_family in ['redhat']

    - name: Update CA trust store
      command: update-ca-certificates
      when:
        - certs_dir.stat.mtime > 0
        - ansible_os_family in ['debian']

    - name: Update CA trust store
      command: trust extract-compat
      when:
        - certs_dir.stat.mtime > 0
        - ansible_os_family in ['Archlinux']
  when:
    - certs_dir.stat.exists
    - certs_dir.stat.isdir



- name: copy profile file
  ansible.builtin.template:
    src: profile.volund.sh.j2
    dest: /etc/profile.d/90-volund.sh
    owner: root
    group: root
    mode: '0644'

- name: Make /.entrypoint.sh executable
  ansible.builtin.file:
    path: /.entrypoint.sh
    mode: '0755'
    owner: root
    group: root

