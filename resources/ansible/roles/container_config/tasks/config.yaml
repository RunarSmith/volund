---

# -- system date & timezone ----------------------------------

- name: Get timezone from ipapi.co if TZ is undefined or empty
  ansible.builtin.uri:
    url: https://ipapi.co/timezone
    return_content: true
  register: timezone_response
  when: TZ is undefined or TZ == None or TZ | length == 0

- name: Set timezone fact
  ansible.builtin.set_fact:
    timezone: "{{ (TZ is defined and TZ != None and TZ | length > 0) | ternary(TZ, timezone_response.content | trim) }}"

- name: Set timezone fact
  ansible.builtin.set_fact:
    timezone: "{{ timezone_response.content | trim }}"

- name: Set system timezone
  ansible.builtin.file:
    src: "/usr/share/zoneinfo/{{ timezone }}"
    dest: /etc/localtime
    state: link
    force: true
  become: true

- name: Write timezone to /etc/timezone
  ansible.builtin.copy:
    content: "{{ timezone }}\n"
    dest: /etc/timezone
    owner: root
    group: root
    mode: '0644'
  become: true

# --- profile & user --------------------------------------

- name: copy profile file
  ansible.builtin.template:
    src: "{{ item }}.j2"
    dest: "/etc/profile.d/{{ item }}"
    owner: root
    group: root
    mode: '0644'
  loop_control:
    loop_var: item
  with_items:
    - 90-volund.sh
  become: true

# --- Archlinux AUR packages ---------------------------------

- name: Configure AUR packages building (Archlinux)
  block:
    - name: cleaning
      ansible.builtin.file:
        path: "{{ volund_temp_folder }}/paru-bin/"
        state: absent
      become: true

    - name: Clone paru PKGBUILD
      git:
        repo: https://aur.archlinux.org/paru-bin.git
        dest: "{{ volund_temp_folder }}/paru-bin"
        update: true

    - name: changing owner
      ansible.builtin.file:
        path: "{{ volund_temp_folder }}/paru-bin/"
        state: directory
        owner: nobody
        group: nobody
        mode: 'u=rwx,g=rwx,o=rwx'
        recurse: true
      become: true

    - name: ensure PKGBUILD is in Unix format
      ansible.builtin.command:
        chdir: "{{ volund_temp_folder }}/paru-bin/"
        cmd: "runuser -u nobody -- dos2unix PKGBUILD"
      become: true

    - name: Build 'paru'
      command:
        chdir: "{{ volund_temp_folder }}/paru-bin/"
        cmd: "runuser -u nobody -- makepkg --syncdeps --noconfirm"
      become: true

    - name: changing owner
      ansible.builtin.file:
        path: "{{ volund_temp_folder }}/paru-bin/"
        state: directory
        owner: "{{ default_username }}"
        recurse: true
      become: true

    - name: search for files with .pkg.tar.zst extension except for *debug* files
      find:
        paths: "{{ volund_temp_folder }}/paru-bin/"
        patterns: "*.pkg.tar.zst"
        recurse: true
        file_type: file
        excludes:
          - "*debug*"
      register: found_packages

    - name: debug found packages
      ansible.builtin.debug:
        msg: "Found packages: {{ found_packages.files }}"

    - name: installing 'paru'
      command:
        chdir: "{{ volund_temp_folder }}/paru-bin/"
        cmd: "pacman -U {{ item.path }} --noconfirm --needed"
      become: true
      when: found_packages.matched > 0
      with_items: "{{ found_packages.files }}"

    - name: cleaning
      ansible.builtin.file:
        path: "{{ volund_temp_folder }}/paru-bin/"
        state: absent
      become: true
  when: ansible_os_family == 'Archlinux' and false # Experimental

# --- python ----------------------------------------------

- name: Ensure pipx is initialised for user
  command: pipx ensurepath
  environment:
    PATH: "{{ ansible_env.PATH }}:/usr/bin"
  become: true
  become_user: "{{ default_username }}"

# --- entrypoint -----------------------------------------------

- name: ensure entrypoint.sh is in Unix format
  ansible.builtin.command:
    cmd: "dos2unix /opt/resources/bin/volund_entrypoint.sh"
  become: true

- name: Make entrypoint.sh executable
  ansible.builtin.file:
    path: /opt/resources/bin/volund_entrypoint.sh
    mode: '0755'
    owner: "{{ default_username }}"
  become: true

- name: Add missing ansible link from pipx
  ansible.builtin.file:
    src: "/home/volund/.local/share/pipx/venvs/ansible/bin/{{ link_item }}"
    dest: "/home/volund/.local/bin/{{ link_item }}"
    state: link
  become: true
  become_user: "{{ default_username }}"
  loop_control:
    loop_var: link_item
  loop:
    - ansible
    - ansible-config
    - ansible-console
    - ansible-doc
    - ansible-galaxy
    - ansible-inventory
    - ansible-playbook
    - ansible-pull
    - ansible-test
    - ansible-vault
